<?php

declare(strict_types=1);

namespace Plugin\Landswitcher\Model;

use Exception;
use JTL\Model\DataAttribute;
use JTL\Model\DataModel;

/**
 * Class TLandModel
 * This class is generated by shopcli model:create
 *
 * @package Plugin\Landswitcher\Model
 * @property string $cISO
 * @method string getCISO()
 * @method void setCISO(string $value)
 * @property string $cDeutsch
 * @method string getCDeutsch()
 * @method void setCDeutsch(string $value)
 * @property string $cEnglisch
 * @method string getCEnglisch()
 * @method void setCEnglisch(string $value)
 * @property int $nEU
 * @method int getNEU()
 * @method void setNEU(int $value)
 * @property string $cKontinent
 * @method string getCKontinent()
 * @method void setCKontinent(string $value)
 * @property int $bPermitRegistration
 * @method int getBPermitRegistration()
 * @method void setBPermitRegistration(int $value)
 * @property int $bRequireStateDefinition
 * @method int getBRequireStateDefinition()
 * @method void setBRequireStateDefinition(int $value)
 */
final class TLandModel extends DataModel
{
    /**
     * @inheritdoc
     */
    public function getTableName(): string
    {
        return 'tland';
    }

    /**
     * Setting of keyname is not supported!
     * Call will always throw an Exception with code ERR_DATABASE!
     * @inheritdoc
     */
    public function setKeyName($keyName): void
    {
        throw new Exception(__METHOD__ . ': setting of keyname is not supported', self::ERR_DATABASE);
    }

    /**
     * @inheritdoc
     */
    protected function onRegisterHandlers(): void
    {
        parent::onRegisterHandlers();
    }

    /**
     * @inheritdoc
     */
    public function getAttributes(): array
    {
        static $attributes = null;
        if ($attributes === null) {
            $attributes   = [];
            $attributes['cISO'] = DataAttribute::create('cISO', 'varchar', null, false, true);
            $attributes['cDeutsch'] = DataAttribute::create('cDeutsch', 'varchar', null, true, false);
            $attributes['cEnglisch'] = DataAttribute::create('cEnglisch', 'varchar', null, true, false);
            $attributes['nEU'] = DataAttribute::create('nEU', 'tinyint', null, true, false);
            $attributes['cKontinent'] = DataAttribute::create('cKontinent', 'varchar', null, true, false);
            $attributes['bPermitRegistration'] = DataAttribute::create('bPermitRegistration', 'tinyint', self::cast('0', 'tinyint'), false, false);
            $attributes['bRequireStateDefinition'] = DataAttribute::create('bRequireStateDefinition', 'tinyint', self::cast('0', 'tinyint'), false, false);
        }

        return $attributes;
    }
}
